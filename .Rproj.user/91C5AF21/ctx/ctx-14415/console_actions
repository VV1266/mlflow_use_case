{
    "data" : [
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#29: config_node <- cloud_config_data\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#31: if (experiment_id_ == \"leakomania\") {\n    config_node <- leakomania_config_data\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#34: for (p in ls(config_node)) {\n    if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n        mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n    }\n    else {\n        mlflow_log_param(p, config_node[[p]])\n    }\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#35: if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n    mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n} else {\n    mlflow_log_param(p, config_node[[p]])\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#38: mlflow_log_param(p, config_node[[p]])\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#35: if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n    mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n} else {\n    mlflow_log_param(p, config_node[[p]])\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#38: mlflow_log_param(p, config_node[[p]])\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#35: if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n    mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n} else {\n    mlflow_log_param(p, config_node[[p]])\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#38: mlflow_log_param(p, config_node[[p]])\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#35: if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n    mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n} else {\n    mlflow_log_param(p, config_node[[p]])\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#38: mlflow_log_param(p, config_node[[p]])\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#35: if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n    mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n} else {\n    mlflow_log_param(p, config_node[[p]])\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#38: mlflow_log_param(p, config_node[[p]])\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#35: if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n    mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n} else {\n    mlflow_log_param(p, config_node[[p]])\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#36: mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#35: if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n    mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n} else {\n    mlflow_log_param(p, config_node[[p]])\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#38: mlflow_log_param(p, config_node[[p]])\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#35: if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n    mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n} else {\n    mlflow_log_param(p, config_node[[p]])\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#38: mlflow_log_param(p, config_node[[p]])\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#35: if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n    mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n} else {\n    mlflow_log_param(p, config_node[[p]])\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#38: mlflow_log_param(p, config_node[[p]])\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#35: if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n    mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n} else {\n    mlflow_log_param(p, config_node[[p]])\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#38: mlflow_log_param(p, config_node[[p]])\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#35: if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n    mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n} else {\n    mlflow_log_param(p, config_node[[p]])\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#38: mlflow_log_param(p, config_node[[p]])\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#35: if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n    mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n} else {\n    mlflow_log_param(p, config_node[[p]])\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#38: mlflow_log_param(p, config_node[[p]])\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#35: if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n    mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n} else {\n    mlflow_log_param(p, config_node[[p]])\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#38: mlflow_log_param(p, config_node[[p]])\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#35: if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n    mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n} else {\n    mlflow_log_param(p, config_node[[p]])\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#38: mlflow_log_param(p, config_node[[p]])\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#35: if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n    mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n} else {\n    mlflow_log_param(p, config_node[[p]])\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#38: mlflow_log_param(p, config_node[[p]])\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#35: if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n    mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n} else {\n    mlflow_log_param(p, config_node[[p]])\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#38: mlflow_log_param(p, config_node[[p]])\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#35: if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n    mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n} else {\n    mlflow_log_param(p, config_node[[p]])\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#36: mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#35: if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n    mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n} else {\n    mlflow_log_param(p, config_node[[p]])\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#36: mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n",
        "Browse[2]> ",
        "c",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#41: mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#43: mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#44: mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#45: mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#46: text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#47: cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#49: cat(\"*******Execaution of code ends*******\", file = fileConn, \n    append = TRUE, sep = \"\\n\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#50: mlflow_log_artifact(file_name, run_id = active_experiment_id)\n",
        "Browse[2]> ",
        "n",
        "[31m2021/02/10 13:31:18 INFO mlflow.store.artifact.cli: Logged artifact from local file cloud_output.txt to artifact_path=None\n[39m",
        "Root URI: /Users/vsuman/Documents/GitHub/mlflow_use_case/mlruns/1/b7d2f4f8ae5246a0b844d5e7a830b5d9/artifacts\n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#53: close(fileConn)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#17: experiment_id_ <- peril\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#18: file_name <- paste(experiment_id_, \"_output.txt\", sep = \"\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#19: fileConn <- file(file_name)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#20: if (main_config_data[peril] == TRUE) {\n    {\n        .doTrace(browser())\n        config_node <- NULL\n    }\n    active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n    with(mlflow_start_run(), {\n        cat(\"**********Execuation of code starts*******\", file = fileConn, \n            append = TRUE, sep = \"\\n\")\n        exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n            \" for Peril:\", experiment_id_)\n",
        "        cat(exper_id_log, file = fileConn, append = TRUE, sep = \"\\n\")\n        if (experiment_id_ == \"cloud\") {\n            config_node <- cloud_config_data\n        }\n        if (experiment_id_ == \"leakomania\") {\n            config_node <- leakomania_config_data\n        }\n        for (p in ls(config_node)) {\n            if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \n                \"senarios_variant_jurdication_ID\")) {\n                mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n            }\n",
        "            else {\n                mlflow_log_param(p, config_node[[p]])\n            }\n        }\n        mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n        text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n        cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n",
        "        cat(\"*******Execaution of code ends*******\", file = fileConn, \n            append = TRUE, sep = \"\\n\")\n        mlflow_log_artifact(file_name, run_id = active_experiment_id)\n    })\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#53: close(fileConn)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#17: experiment_id_ <- peril\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#18: file_name <- paste(experiment_id_, \"_output.txt\", sep = \"\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#19: fileConn <- file(file_name)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#20: if (main_config_data[peril] == TRUE) {\n    {\n        .doTrace(browser())\n        config_node <- NULL\n    }\n    active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n    with(mlflow_start_run(), {\n        cat(\"**********Execuation of code starts*******\", file = fileConn, \n            append = TRUE, sep = \"\\n\")\n        exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n            \" for Peril:\", experiment_id_)\n",
        "        cat(exper_id_log, file = fileConn, append = TRUE, sep = \"\\n\")\n        if (experiment_id_ == \"cloud\") {\n            config_node <- cloud_config_data\n        }\n        if (experiment_id_ == \"leakomania\") {\n            config_node <- leakomania_config_data\n        }\n        for (p in ls(config_node)) {\n            if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \n                \"senarios_variant_jurdication_ID\")) {\n                mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n            }\n",
        "            else {\n                mlflow_log_param(p, config_node[[p]])\n            }\n        }\n        mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n        text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n        cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n",
        "        cat(\"*******Execaution of code ends*******\", file = fileConn, \n            append = TRUE, sep = \"\\n\")\n        mlflow_log_artifact(file_name, run_id = active_experiment_id)\n    })\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#53: close(fileConn)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#17: experiment_id_ <- peril\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#18: file_name <- paste(experiment_id_, \"_output.txt\", sep = \"\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#19: fileConn <- file(file_name)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#20: if (main_config_data[peril] == TRUE) {\n    {\n        .doTrace(browser())\n        config_node <- NULL\n    }\n    active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n    with(mlflow_start_run(), {\n        cat(\"**********Execuation of code starts*******\", file = fileConn, \n            append = TRUE, sep = \"\\n\")\n        exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n            \" for Peril:\", experiment_id_)\n",
        "        cat(exper_id_log, file = fileConn, append = TRUE, sep = \"\\n\")\n        if (experiment_id_ == \"cloud\") {\n            config_node <- cloud_config_data\n        }\n        if (experiment_id_ == \"leakomania\") {\n            config_node <- leakomania_config_data\n        }\n        for (p in ls(config_node)) {\n            if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \n                \"senarios_variant_jurdication_ID\")) {\n                mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n            }\n",
        "            else {\n                mlflow_log_param(p, config_node[[p]])\n            }\n        }\n        mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n        text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n        cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n",
        "        cat(\"*******Execaution of code ends*******\", file = fileConn, \n            append = TRUE, sep = \"\\n\")\n        mlflow_log_artifact(file_name, run_id = active_experiment_id)\n    })\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#53: close(fileConn)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#17: experiment_id_ <- peril\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#18: file_name <- paste(experiment_id_, \"_output.txt\", sep = \"\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#19: fileConn <- file(file_name)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#20: if (main_config_data[peril] == TRUE) {\n    {\n        .doTrace(browser())\n        config_node <- NULL\n    }\n    active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n    with(mlflow_start_run(), {\n        cat(\"**********Execuation of code starts*******\", file = fileConn, \n            append = TRUE, sep = \"\\n\")\n        exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n            \" for Peril:\", experiment_id_)\n",
        "        cat(exper_id_log, file = fileConn, append = TRUE, sep = \"\\n\")\n        if (experiment_id_ == \"cloud\") {\n            config_node <- cloud_config_data\n        }\n        if (experiment_id_ == \"leakomania\") {\n            config_node <- leakomania_config_data\n        }\n        for (p in ls(config_node)) {\n            if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \n                \"senarios_variant_jurdication_ID\")) {\n                mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n            }\n",
        "            else {\n                mlflow_log_param(p, config_node[[p]])\n            }\n        }\n        mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n        text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n        cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n",
        "        cat(\"*******Execaution of code ends*******\", file = fileConn, \n            append = TRUE, sep = \"\\n\")\n        mlflow_log_artifact(file_name, run_id = active_experiment_id)\n    })\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: {\n    .doTrace(browser())\n    config_node <- NULL\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: .doTrace(browser())\n",
        "Browse[2]> ",
        "n",
        "Browse[3]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: config_node <- NULL\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#22: active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#24: with(mlflow_start_run(), {\n    cat(\"**********Execuation of code starts*******\", file = fileConn, \n        append = TRUE, sep = \"\\n\")\n    exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n        \" for Peril:\", experiment_id_)\n    cat(exper_id_log, file = fileConn, append = TRUE, sep = \"\\n\")\n    if (experiment_id_ == \"cloud\") {\n        config_node <- cloud_config_data\n    }\n    if (experiment_id_ == \"leakomania\") {\n        config_node <- leakomania_config_data\n",
        "    }\n    for (p in ls(config_node)) {\n        if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n            mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n        }\n        else {\n            mlflow_log_param(p, config_node[[p]])\n        }\n    }\n    mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n    mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n    mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n",
        "    mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n    text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n    cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n    cat(\"*******Execaution of code ends*******\", file = fileConn, \n        append = TRUE, sep = \"\\n\")\n    mlflow_log_artifact(file_name, run_id = active_experiment_id)\n})\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#25: cat(\"**********Execuation of code starts*******\", file = fileConn, \n    append = TRUE, sep = \"\\n\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#26: exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n    \" for Peril:\", experiment_id_)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#27: cat(exper_id_log, file = fileConn, append = TRUE, sep = \"\\n\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#28: if (experiment_id_ == \"cloud\") {\n    config_node <- cloud_config_data\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#31: if (experiment_id_ == \"leakomania\") {\n    config_node <- leakomania_config_data\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#32: config_node <- leakomania_config_data\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#34: for (p in ls(config_node)) {\n    if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n        mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n    }\n    else {\n        mlflow_log_param(p, config_node[[p]])\n    }\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#35: if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n    mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n} else {\n    mlflow_log_param(p, config_node[[p]])\n}\n",
        "Browse[2]> ",
        "c",
        "`value` must be of length 1, but is of length 2.",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#55: mlflow_ui()\n",
        "Browse[2]> ",
        "n",
        "> ",
        "mlflow_ui()",
        "> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "Called from: eval(expr, p)\n",
        "Browse[1]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#11: main_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/main_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#12: leakomania_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/leakomania_config.json\")\n",
        "Browse[2]> ",
        "c",
        "Called from: eval(expr, p)\n",
        "Browse[1]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: config_node <- NULL\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#22: active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n",
        "Browse[2]> ",
        "c",
        "Called from: eval(expr, p)\n",
        "Browse[1]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#41: mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#43: mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n",
        "Browse[2]> ",
        "c",
        "[31m2021/02/10 13:35:33 INFO mlflow.store.artifact.cli: Logged artifact from local file cloud_output.txt to artifact_path=None\n[39m",
        "Root URI: /Users/vsuman/Documents/GitHub/mlflow_use_case/mlruns/1/91711fa5a4fd44d08974721916ae6eea/artifacts\n",
        "Called from: eval(expr, p)\n",
        "Browse[1]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: config_node <- NULL\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#22: active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n",
        "Browse[2]> ",
        "c",
        "Called from: eval(expr, p)\n",
        "Browse[1]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#41: mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#43: mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n",
        "Browse[2]> ",
        "c",
        "[31m2021/02/10 13:35:39 INFO mlflow.store.artifact.cli: Logged artifact from local file leakomania_output.txt to artifact_path=None\n[39m",
        "Root URI: /Users/vsuman/Documents/GitHub/mlflow_use_case/mlruns/1/ed12c22469384494b45c5ea0a2f56a4b/artifacts\n",
        "Warning messages:\n",
        "1: ",
        "In for (i in seq_along(specs)) { :",
        "\n ",
        " closing unused connection 4 (cloud_output.txt)\n",
        "2: ",
        "In for (i in seq_along(specs)) { :",
        "\n ",
        " closing unused connection 3 (cloud_output.txt)\n",
        "> ",
        "mlflow_set_experiment(experiment_name_)",
        "> ",
        "if <- mlflow_set_experiment(experiment_name_)",
        "Error: unexpected assignment in \"if <-\"\n",
        "> ",
        "iD_ <- mlflow_set_experiment(experiment_name_)",
        "> ",
        "install.packages(\"rjson\")",
        "Error in install.packages : Updating loaded packages\n\nRestarting R session...\n\n",
        "> ",
        "install.packages(\"rjson\")",
        "trying URL 'https://cran.rstudio.com/bin/macosx/el-capitan/contrib/3.6/rjson_0.2.20.tgz'\n",
        "Content type 'application/x-gzip'",
        " length 192410 bytes (187 KB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 187 KB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/k_/kygvt4y56nv4t17ttlsqdykm9_bszg/T//RtmpezECYf/downloaded_packages\n",
        "> ",
        "library(rjson)",
        "> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "Called from: eval(expr, p)\n",
        "Browse[1]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#11: main_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/main_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#12: leakomania_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/leakomania_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#13: cloud_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/cloud_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#16: for (peril in ls(main_config_data)) {\n    experiment_id_ <- peril\n    file_name <- paste(experiment_id_, \"_output.txt\", sep = \"\")\n    fileConn <- file(file_name)\n    if (main_config_data[peril] == TRUE) {\n        {\n            .doTrace(browser())\n            config_node <- NULL\n        }\n        active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n        with(mlflow_start_run(), {\n            {\n                .doTrace(browser())\n",
        "                mlflow_rename_experiment(peril)\n            }\n            cat(\"**********Execuation of code starts*******\", \n                file = fileConn, append = TRUE, sep = \"\\n\")\n            exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n                \" for Peril:\", experiment_id_)\n            cat(exper_id_log, file = fileConn, append = TRUE, \n                sep = \"\\n\")\n            if (experiment_id_ == \"cloud\") {\n                config_node <- cloud_config_data\n            }\n",
        "            if (experiment_id_ == \"leakomania\") {\n                config_node <- leakomania_config_data\n            }\n            for (p in ls(config_node)) {\n                if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \n                  \"senarios_variant_jurdication_ID\")) {\n                  mlflow_log_param(p, paste(config_node[[p]], \n                    collapse = \", \"))\n                }\n                else {\n                  mlflow_log_param(p, config_node[[p]])\n                }\n            }\n            mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n",
        "            mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n            mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n            mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n            text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n            cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n            cat(\"*******Execaution of code ends*******\", file = fileConn, \n                append = TRUE, sep = \"\\n\")\n            mlflow_log_artifact(file_name, run_id = active_experiment_id)\n",
        "        })\n        mlflow_end_run(status = c(\"FINISHED\", \"FAILED\", \"KILLED\"), \n            run_id = active_experiment_id)\n    }\n    close(fileConn)\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#17: experiment_id_ <- peril\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#18: file_name <- paste(experiment_id_, \"_output.txt\", sep = \"\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#19: fileConn <- file(file_name)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#20: if (main_config_data[peril] == TRUE) {\n    {\n        .doTrace(browser())\n        config_node <- NULL\n    }\n    active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n    with(mlflow_start_run(), {\n        {\n            .doTrace(browser())\n            mlflow_rename_experiment(peril)\n        }\n        cat(\"**********Execuation of code starts*******\", file = fileConn, \n            append = TRUE, sep = \"\\n\")\n        exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n",
        "            \" for Peril:\", experiment_id_)\n        cat(exper_id_log, file = fileConn, append = TRUE, sep = \"\\n\")\n        if (experiment_id_ == \"cloud\") {\n            config_node <- cloud_config_data\n        }\n        if (experiment_id_ == \"leakomania\") {\n            config_node <- leakomania_config_data\n        }\n        for (p in ls(config_node)) {\n            if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \n                \"senarios_variant_jurdication_ID\")) {\n                mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n",
        "            }\n            else {\n                mlflow_log_param(p, config_node[[p]])\n            }\n        }\n        mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n        text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n        cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n",
        "        cat(\"*******Execaution of code ends*******\", file = fileConn, \n            append = TRUE, sep = \"\\n\")\n        mlflow_log_artifact(file_name, run_id = active_experiment_id)\n    })\n    mlflow_end_run(status = c(\"FINISHED\", \"FAILED\", \"KILLED\"), \n        run_id = active_experiment_id)\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: {\n    .doTrace(browser())\n    config_node <- NULL\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: .doTrace(browser())\n",
        "Browse[2]> ",
        "n",
        "Browse[3]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: config_node <- NULL\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#22: active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#23: with(mlflow_start_run(), {\n    {\n        .doTrace(browser())\n        mlflow_rename_experiment(peril)\n    }\n    cat(\"**********Execuation of code starts*******\", file = fileConn, \n        append = TRUE, sep = \"\\n\")\n    exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n        \" for Peril:\", experiment_id_)\n    cat(exper_id_log, file = fileConn, append = TRUE, sep = \"\\n\")\n    if (experiment_id_ == \"cloud\") {\n        config_node <- cloud_config_data\n",
        "    }\n    if (experiment_id_ == \"leakomania\") {\n        config_node <- leakomania_config_data\n    }\n    for (p in ls(config_node)) {\n        if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n            mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n        }\n        else {\n            mlflow_log_param(p, config_node[[p]])\n        }\n    }\n    mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n    mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n",
        "    mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n    mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n    text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n    cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n    cat(\"*******Execaution of code ends*******\", file = fileConn, \n        append = TRUE, sep = \"\\n\")\n    mlflow_log_artifact(file_name, run_id = active_experiment_id)\n})\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#24: {\n    .doTrace(browser())\n    mlflow_rename_experiment(peril)\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#24: .doTrace(browser())\n",
        "Browse[2]> ",
        "n",
        "Browse[3]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#24: mlflow_rename_experiment(peril)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#25: cat(\"**********Execuation of code starts*******\", file = fileConn, \n    append = TRUE, sep = \"\\n\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#26: exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n    \" for Peril:\", experiment_id_)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#27: cat(exper_id_log, file = fileConn, append = TRUE, sep = \"\\n\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#28: if (experiment_id_ == \"cloud\") {\n    config_node <- cloud_config_data\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#29: config_node <- cloud_config_data\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#31: if (experiment_id_ == \"leakomania\") {\n    config_node <- leakomania_config_data\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#34: for (p in ls(config_node)) {\n    if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n        mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n    }\n    else {\n        mlflow_log_param(p, config_node[[p]])\n    }\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#35: if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n    mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n} else {\n    mlflow_log_param(p, config_node[[p]])\n}\n",
        "Browse[2]> ",
        "c",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#41: mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#43: mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#44: mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#45: mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#46: text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#47: cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#49: cat(\"*******Execaution of code ends*******\", file = fileConn, \n    append = TRUE, sep = \"\\n\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#50: mlflow_log_artifact(file_name, run_id = active_experiment_id)\n",
        "Browse[2]> ",
        "n",
        "[31m2021/02/10 15:34:32 INFO mlflow.store.artifact.cli: Logged artifact from local file cloud_output.txt to artifact_path=None\n[39m",
        "Root URI: /Users/vsuman/Documents/GitHub/mlflow_use_case/mlruns/1/58492634f9c045bc8a33966491de1011/artifacts\n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#52: mlflow_end_run(status = c(\"FINISHED\", \"FAILED\", \"KILLED\"), run_id = active_experiment_id)\n",
        "Browse[2]> ",
        "n",
        "Error: There is no active run to end.\n",
        "> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "Called from: eval(expr, p)\n",
        "Browse[1]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#11: main_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/main_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#12: leakomania_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/leakomania_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#13: cloud_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/cloud_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#16: for (peril in ls(main_config_data)) {\n    experiment_id_ <- peril\n    file_name <- paste(experiment_id_, \"_output.txt\", sep = \"\")\n    fileConn <- file(file_name)\n    if (main_config_data[peril] == TRUE) {\n        {\n            .doTrace(browser())\n            config_node <- NULL\n        }\n        active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n        with(mlflow_start_run(), {\n            {\n                .doTrace(browser())\n",
        "                mlflow_rename_experiment(peril)\n            }\n            cat(\"**********Execuation of code starts*******\", \n                file = fileConn, append = TRUE, sep = \"\\n\")\n            exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n                \" for Peril:\", experiment_id_)\n            cat(exper_id_log, file = fileConn, append = TRUE, \n                sep = \"\\n\")\n            if (experiment_id_ == \"cloud\") {\n                config_node <- cloud_config_data\n            }\n",
        "            if (experiment_id_ == \"leakomania\") {\n                config_node <- leakomania_config_data\n            }\n            for (p in ls(config_node)) {\n                if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \n                  \"senarios_variant_jurdication_ID\")) {\n                  mlflow_log_param(p, paste(config_node[[p]], \n                    collapse = \", \"))\n                }\n                else {\n                  mlflow_log_param(p, config_node[[p]])\n                }\n            }\n            mlflow_log_metric(experiment_id_, 1, run_id = peril)\n",
        "            mlflow_log_metric(experiment_id_, 5, run_id = peril)\n            mlflow_log_metric(experiment_id_, 2, run_id = peril)\n            mlflow_log_metric(experiment_id_, 3, run_id = peril)\n            text = paste(toString(experiment_name_), \":\", toString(peril))\n            {\n                .doTrace(browser())\n                cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n            }\n            cat(\"*******Execaution of code ends*******\", file = fileConn, \n                append = TRUE, sep = \"\\n\")\n",
        "            mlflow_log_artifact(file_name, run_id = peril)\n        })\n        mlflow_end_run(status = c(\"FINISHED\", \"FAILED\", \"KILLED\"), \n            run_id = peril)\n    }\n    close(fileConn)\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#17: experiment_id_ <- peril\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#18: file_name <- paste(experiment_id_, \"_output.txt\", sep = \"\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#19: fileConn <- file(file_name)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#20: if (main_config_data[peril] == TRUE) {\n    {\n        .doTrace(browser())\n        config_node <- NULL\n    }\n    active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n    with(mlflow_start_run(), {\n        {\n            .doTrace(browser())\n            mlflow_rename_experiment(peril)\n        }\n        cat(\"**********Execuation of code starts*******\", file = fileConn, \n            append = TRUE, sep = \"\\n\")\n        exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n",
        "            \" for Peril:\", experiment_id_)\n        cat(exper_id_log, file = fileConn, append = TRUE, sep = \"\\n\")\n        if (experiment_id_ == \"cloud\") {\n            config_node <- cloud_config_data\n        }\n        if (experiment_id_ == \"leakomania\") {\n            config_node <- leakomania_config_data\n        }\n        for (p in ls(config_node)) {\n            if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \n                \"senarios_variant_jurdication_ID\")) {\n                mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n",
        "            }\n            else {\n                mlflow_log_param(p, config_node[[p]])\n            }\n        }\n        mlflow_log_metric(experiment_id_, 1, run_id = peril)\n        mlflow_log_metric(experiment_id_, 5, run_id = peril)\n        mlflow_log_metric(experiment_id_, 2, run_id = peril)\n        mlflow_log_metric(experiment_id_, 3, run_id = peril)\n        text = paste(toString(experiment_name_), \":\", toString(peril))\n        {\n            .doTrace(browser())\n            cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n",
        "        }\n        cat(\"*******Execaution of code ends*******\", file = fileConn, \n            append = TRUE, sep = \"\\n\")\n        mlflow_log_artifact(file_name, run_id = peril)\n    })\n    mlflow_end_run(status = c(\"FINISHED\", \"FAILED\", \"KILLED\"), \n        run_id = peril)\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: {\n    .doTrace(browser())\n    config_node <- NULL\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: .doTrace(browser())\n",
        "Browse[2]> ",
        "n",
        "Browse[3]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: config_node <- NULL\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#22: active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n",
        "Browse[2]> ",
        "n",
        "Experiment `exp_run_1` does not exist. Creating a new experiment.\n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#23: with(mlflow_start_run(), {\n    {\n        .doTrace(browser())\n        mlflow_rename_experiment(peril)\n    }\n    cat(\"**********Execuation of code starts*******\", file = fileConn, \n        append = TRUE, sep = \"\\n\")\n    exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n        \" for Peril:\", experiment_id_)\n    cat(exper_id_log, file = fileConn, append = TRUE, sep = \"\\n\")\n    if (experiment_id_ == \"cloud\") {\n        config_node <- cloud_config_data\n",
        "    }\n    if (experiment_id_ == \"leakomania\") {\n        config_node <- leakomania_config_data\n    }\n    for (p in ls(config_node)) {\n        if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n            mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n        }\n        else {\n            mlflow_log_param(p, config_node[[p]])\n        }\n    }\n    mlflow_log_metric(experiment_id_, 1, run_id = peril)\n    mlflow_log_metric(experiment_id_, 5, run_id = peril)\n    mlflow_log_metric(experiment_id_, 2, run_id = peril)\n",
        "    mlflow_log_metric(experiment_id_, 3, run_id = peril)\n    text = paste(toString(experiment_name_), \":\", toString(peril))\n    {\n        .doTrace(browser())\n        cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n    }\n    cat(\"*******Execaution of code ends*******\", file = fileConn, \n        append = TRUE, sep = \"\\n\")\n    mlflow_log_artifact(file_name, run_id = peril)\n})\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#24: {\n    .doTrace(browser())\n    mlflow_rename_experiment(peril)\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#24: .doTrace(browser())\n",
        "Browse[2]> ",
        "n",
        "Browse[3]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#24: mlflow_rename_experiment(peril)\n",
        "Browse[2]> ",
        "n",
        "API request to endpoint 'experiments/update' failed with error code 400. Reponse body: 'RESOURCE_ALREADY_EXISTS; Experiment 'cloud' already exists.'",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#52: mlflow_end_run(status = c(\"FINISHED\", \"FAILED\", \"KILLED\"), run_id = peril)\n",
        "Browse[2]> ",
        "n",
        "Error: API request to endpoint 'runs/update' failed with error code 404. Reponse body: 'RESOURCE_DOES_NOT_EXIST; Run 'cloud' not found'\n",
        "> ",
        "n",
        "Error: object 'n' not found\n",
        "> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "Called from: eval(expr, p)\n",
        "Browse[1]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#11: main_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/main_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#12: leakomania_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/leakomania_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#13: cloud_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/cloud_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#16: for (peril in ls(main_config_data)) {\n    experiment_id_ <- peril\n    file_name <- paste(experiment_id_, \"_output.txt\", sep = \"\")\n    fileConn <- file(file_name)\n    if (main_config_data[peril] == TRUE) {\n        {\n            .doTrace(browser())\n            config_node <- NULL\n        }\n        active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n        with(mlflow_start_run(), {\n            {\n                .doTrace(browser())\n",
        "                mlflow_rename_experiment(new_name = peril, experiment_id = active_experiment_id)\n            }\n            cat(\"**********Execuation of code starts*******\", \n                file = fileConn, append = TRUE, sep = \"\\n\")\n            exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n                \" for Peril:\", experiment_id_)\n            cat(exper_id_log, file = fileConn, append = TRUE, \n                sep = \"\\n\")\n            if (experiment_id_ == \"cloud\") {\n                config_node <- cloud_config_data\n",
        "            }\n            if (experiment_id_ == \"leakomania\") {\n                config_node <- leakomania_config_data\n            }\n            for (p in ls(config_node)) {\n                if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \n                  \"senarios_variant_jurdication_ID\")) {\n                  mlflow_log_param(p, paste(config_node[[p]], \n                    collapse = \", \"))\n                }\n                else {\n                  mlflow_log_param(p, config_node[[p]])\n                }\n            }\n",
        "            mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n            mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n            mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n            mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n            text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n            {\n                .doTrace(browser())\n                cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n",
        "            }\n            cat(\"*******Execaution of code ends*******\", file = fileConn, \n                append = TRUE, sep = \"\\n\")\n            mlflow_log_artifact(file_name, run_id = active_experiment_id)\n        })\n        mlflow_end_run(status = c(\"FINISHED\", \"FAILED\", \"KILLED\"), \n            run_id = active_experiment_id)\n    }\n    close(fileConn)\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#17: experiment_id_ <- peril\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#18: file_name <- paste(experiment_id_, \"_output.txt\", sep = \"\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#19: fileConn <- file(file_name)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#20: if (main_config_data[peril] == TRUE) {\n    {\n        .doTrace(browser())\n        config_node <- NULL\n    }\n    active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n    with(mlflow_start_run(), {\n        {\n            .doTrace(browser())\n            mlflow_rename_experiment(new_name = peril, experiment_id = active_experiment_id)\n        }\n        cat(\"**********Execuation of code starts*******\", file = fileConn, \n",
        "            append = TRUE, sep = \"\\n\")\n        exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n            \" for Peril:\", experiment_id_)\n        cat(exper_id_log, file = fileConn, append = TRUE, sep = \"\\n\")\n        if (experiment_id_ == \"cloud\") {\n            config_node <- cloud_config_data\n        }\n        if (experiment_id_ == \"leakomania\") {\n            config_node <- leakomania_config_data\n        }\n        for (p in ls(config_node)) {\n            if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \n",
        "                \"senarios_variant_jurdication_ID\")) {\n                mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n            }\n            else {\n                mlflow_log_param(p, config_node[[p]])\n            }\n        }\n        mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n",
        "        text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n        {\n            .doTrace(browser())\n            cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n        }\n        cat(\"*******Execaution of code ends*******\", file = fileConn, \n            append = TRUE, sep = \"\\n\")\n        mlflow_log_artifact(file_name, run_id = active_experiment_id)\n    })\n    mlflow_end_run(status = c(\"FINISHED\", \"FAILED\", \"KILLED\"), \n        run_id = active_experiment_id)\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: {\n    .doTrace(browser())\n    config_node <- NULL\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: .doTrace(browser())\n",
        "Browse[2]> ",
        "n",
        "Browse[3]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: config_node <- NULL\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#22: active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#23: with(mlflow_start_run(), {\n    {\n        .doTrace(browser())\n        mlflow_rename_experiment(new_name = peril, experiment_id = active_experiment_id)\n    }\n    cat(\"**********Execuation of code starts*******\", file = fileConn, \n        append = TRUE, sep = \"\\n\")\n    exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n        \" for Peril:\", experiment_id_)\n    cat(exper_id_log, file = fileConn, append = TRUE, sep = \"\\n\")\n    if (experiment_id_ == \"cloud\") {\n",
        "        config_node <- cloud_config_data\n    }\n    if (experiment_id_ == \"leakomania\") {\n        config_node <- leakomania_config_data\n    }\n    for (p in ls(config_node)) {\n        if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n            mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n        }\n        else {\n            mlflow_log_param(p, config_node[[p]])\n        }\n    }\n    mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n    mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n",
        "    mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n    mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n    text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n    {\n        .doTrace(browser())\n        cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n    }\n    cat(\"*******Execaution of code ends*******\", file = fileConn, \n        append = TRUE, sep = \"\\n\")\n    mlflow_log_artifact(file_name, run_id = active_experiment_id)\n})\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#24: {\n    .doTrace(browser())\n    mlflow_rename_experiment(new_name = peril, experiment_id = active_experiment_id)\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#24: .doTrace(browser())\n",
        "Browse[2]> ",
        "n",
        "Browse[3]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#24: mlflow_rename_experiment(new_name = peril, experiment_id = active_experiment_id)\n",
        "Browse[2]> ",
        "n",
        "API request to endpoint 'experiments/update' failed with error code 400. Reponse body: 'RESOURCE_ALREADY_EXISTS; Experiment 'cloud' already exists.'",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#52: mlflow_end_run(status = c(\"FINISHED\", \"FAILED\", \"KILLED\"), run_id = active_experiment_id)\n",
        "Browse[2]> ",
        "n",
        "Error: There is no active run to end.\n",
        "> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "Called from: eval(expr, p)\n",
        "Browse[1]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#11: main_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/main_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#12: leakomania_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/leakomania_config.json\")\n",
        "Browse[2]> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "Called from: eval(expr, p)\n",
        "Browse[1]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#11: main_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/main_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#12: leakomania_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/leakomania_config.json\")\n",
        "Browse[2]> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "Called from: eval(expr, p)\n",
        "Browse[1]> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "API request to endpoint 'experiments/update' failed with error code 400. Reponse body: 'RESOURCE_ALREADY_EXISTS; Experiment 'cloud' already exists.'",
        "Error: There is no active run to end.\n",
        "Browse[1]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#11: main_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/main_config.json\")\n",
        "Browse[2]> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "Called from: eval(expr, p)\n",
        "Browse[1]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#11: main_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/main_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#12: leakomania_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/leakomania_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#13: cloud_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/cloud_config.json\")\n",
        "Browse[2]> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "Called from: eval(expr, p)\n",
        "Browse[1]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#11: main_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/main_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#12: leakomania_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/leakomania_config.json\")\n",
        "Browse[2]> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "Called from: eval(expr, p)\n",
        "Browse[1]> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "API request to endpoint 'experiments/update' failed with error code 400. Reponse body: 'RESOURCE_ALREADY_EXISTS; Experiment 'cloud' already exists.'",
        "Error: There is no active run to end.\n",
        "Browse[1]> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "API request to endpoint 'experiments/update' failed with error code 400. Reponse body: 'RESOURCE_ALREADY_EXISTS; Experiment 'cloud' already exists.'",
        "Error: There is no active run to end.\n",
        "Browse[1]> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "API request to endpoint 'experiments/update' failed with error code 400. Reponse body: 'RESOURCE_ALREADY_EXISTS; Experiment 'cloud' already exists.'",
        "Error: There is no active run to end.\n",
        "Browse[1]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#11: main_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/main_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#12: leakomania_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/leakomania_config.json\")\n",
        "Browse[2]> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "Called from: eval(expr, p)\n",
        "Browse[1]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#11: main_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/main_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#12: leakomania_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/leakomania_config.json\")\n",
        "Browse[2]> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "Called from: eval(expr, p)\n",
        "Browse[1]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#11: main_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/main_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#12: leakomania_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/leakomania_config.json\")\n",
        "Browse[2]> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "Called from: eval(expr, p)\n",
        "Browse[1]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#11: main_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/main_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#12: leakomania_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/leakomania_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#13: cloud_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/cloud_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#16: for (peril in ls(main_config_data)) {\n    experiment_id_ <- peril\n    file_name <- paste(experiment_id_, \"_output.txt\", sep = \"\")\n    fileConn <- file(file_name)\n    if (main_config_data[peril] == TRUE) {\n        {\n            .doTrace(browser())\n            config_node <- NULL\n        }\n        active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n        with(mlflow_start_run(), {\n            {\n                .doTrace(browser())\n",
        "                mlflow_rename_experiment(new_name = peril, experiment_id = active_experiment_id)\n            }\n            cat(\"**********Execuation of code starts*******\", \n                file = fileConn, append = TRUE, sep = \"\\n\")\n            exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n                \" for Peril:\", experiment_id_)\n            cat(exper_id_log, file = fileConn, append = TRUE, \n                sep = \"\\n\")\n            if (experiment_id_ == \"cloud\") {\n                config_node <- cloud_config_data\n",
        "            }\n            if (experiment_id_ == \"leakomania\") {\n                config_node <- leakomania_config_data\n            }\n            for (p in ls(config_node)) {\n                if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \n                  \"senarios_variant_jurdication_ID\")) {\n                  mlflow_log_param(p, paste(config_node[[p]], \n                    collapse = \", \"))\n                }\n                else {\n                  mlflow_log_param(p, config_node[[p]])\n                }\n            }\n",
        "            mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n            mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n            mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n            mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n            text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n            {\n                .doTrace(browser())\n                cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n",
        "            }\n            cat(\"*******Execaution of code ends*******\", file = fileConn, \n                append = TRUE, sep = \"\\n\")\n            mlflow_log_artifact(file_name, run_id = active_experiment_id)\n        })\n        close(fileConn)\n    }\n    mlflow_ui()\n    mlflow_end_run(status = c(\"FINISHED\", \"FAILED\", \"KILLED\"), \n        run_id = active_experiment_id)\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#17: experiment_id_ <- peril\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#18: file_name <- paste(experiment_id_, \"_output.txt\", sep = \"\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#19: fileConn <- file(file_name)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#20: if (main_config_data[peril] == TRUE) {\n    {\n        .doTrace(browser())\n        config_node <- NULL\n    }\n    active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n    with(mlflow_start_run(), {\n        {\n            .doTrace(browser())\n            mlflow_rename_experiment(new_name = peril, experiment_id = active_experiment_id)\n        }\n        cat(\"**********Execuation of code starts*******\", file = fileConn, \n",
        "            append = TRUE, sep = \"\\n\")\n        exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n            \" for Peril:\", experiment_id_)\n        cat(exper_id_log, file = fileConn, append = TRUE, sep = \"\\n\")\n        if (experiment_id_ == \"cloud\") {\n            config_node <- cloud_config_data\n        }\n        if (experiment_id_ == \"leakomania\") {\n            config_node <- leakomania_config_data\n        }\n        for (p in ls(config_node)) {\n            if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \n",
        "                \"senarios_variant_jurdication_ID\")) {\n                mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n            }\n            else {\n                mlflow_log_param(p, config_node[[p]])\n            }\n        }\n        mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n",
        "        text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n        {\n            .doTrace(browser())\n            cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n        }\n        cat(\"*******Execaution of code ends*******\", file = fileConn, \n            append = TRUE, sep = \"\\n\")\n        mlflow_log_artifact(file_name, run_id = active_experiment_id)\n    })\n    close(fileConn)\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: {\n    .doTrace(browser())\n    config_node <- NULL\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: .doTrace(browser())\n",
        "Browse[2]> ",
        "n",
        "Browse[3]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: config_node <- NULL\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#22: active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#23: with(mlflow_start_run(), {\n    {\n        .doTrace(browser())\n        mlflow_rename_experiment(new_name = peril, experiment_id = active_experiment_id)\n    }\n    cat(\"**********Execuation of code starts*******\", file = fileConn, \n        append = TRUE, sep = \"\\n\")\n    exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n        \" for Peril:\", experiment_id_)\n    cat(exper_id_log, file = fileConn, append = TRUE, sep = \"\\n\")\n    if (experiment_id_ == \"cloud\") {\n",
        "        config_node <- cloud_config_data\n    }\n    if (experiment_id_ == \"leakomania\") {\n        config_node <- leakomania_config_data\n    }\n    for (p in ls(config_node)) {\n        if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n            mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n        }\n        else {\n            mlflow_log_param(p, config_node[[p]])\n        }\n    }\n    mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n    mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n",
        "    mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n    mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n    text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n    {\n        .doTrace(browser())\n        cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n    }\n    cat(\"*******Execaution of code ends*******\", file = fileConn, \n        append = TRUE, sep = \"\\n\")\n    mlflow_log_artifact(file_name, run_id = active_experiment_id)\n})\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#24: {\n    .doTrace(browser())\n    mlflow_rename_experiment(new_name = peril, experiment_id = active_experiment_id)\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#24: .doTrace(browser())\n",
        "Browse[2]> ",
        "n",
        "Browse[3]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#24: mlflow_rename_experiment(new_name = peril, experiment_id = active_experiment_id)\n",
        "Browse[2]> ",
        "n",
        "API request to endpoint 'experiments/update' failed with error code 400. Reponse body: 'RESOURCE_ALREADY_EXISTS; Experiment 'cloud' already exists.'",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#53: close(fileConn)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#55: mlflow_ui()\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#56: mlflow_end_run(status = c(\"FINISHED\", \"FAILED\", \"KILLED\"), run_id = active_experiment_id)\n",
        "Browse[2]> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "Error in fBody[[i]] : subscript out of bounds\n",
        "Browse[2]> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "Error in fBody[[i]] : subscript out of bounds\n",
        "Browse[2]> ",
        "n",
        "Error: There is no active run to end.\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#13: cloud_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/cloud_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#16: for (peril in ls(main_config_data)) {\n    experiment_id_ <- peril\n    file_name <- paste(experiment_id_, \"_output.txt\", sep = \"\")\n    fileConn <- file(file_name)\n    if (main_config_data[peril] == TRUE) {\n        {\n            .doTrace(browser())\n            config_node <- NULL\n        }\n        active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n        with(mlflow_start_run(), {\n            {\n                .doTrace(browser())\n",
        "                mlflow_rename_experiment(new_name = peril, experiment_id = active_experiment_id)\n            }\n            cat(\"**********Execuation of code starts*******\", \n                file = fileConn, append = TRUE, sep = \"\\n\")\n            exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n                \" for Peril:\", experiment_id_)\n            cat(exper_id_log, file = fileConn, append = TRUE, \n                sep = \"\\n\")\n            if (experiment_id_ == \"cloud\") {\n                config_node <- cloud_config_data\n",
        "            }\n            if (experiment_id_ == \"leakomania\") {\n                config_node <- leakomania_config_data\n            }\n            for (p in ls(config_node)) {\n                if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \n                  \"senarios_variant_jurdication_ID\")) {\n                  mlflow_log_param(p, paste(config_node[[p]], \n                    collapse = \", \"))\n                }\n                else {\n                  mlflow_log_param(p, config_node[[p]])\n                }\n            }\n",
        "            mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n            mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n            mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n            mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n            text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n            {\n                .doTrace(browser())\n                cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n",
        "            }\n            cat(\"*******Execaution of code ends*******\", file = fileConn, \n                append = TRUE, sep = \"\\n\")\n            mlflow_log_artifact(file_name, run_id = active_experiment_id)\n        })\n        close(fileConn)\n    }\n    mlflow_ui()\n    mlflow_end_run(status = c(\"FINISHED\", \"FAILED\", \"KILLED\"), \n        run_id = active_experiment_id)\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#17: experiment_id_ <- peril\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#18: file_name <- paste(experiment_id_, \"_output.txt\", sep = \"\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#19: fileConn <- file(file_name)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#20: if (main_config_data[peril] == TRUE) {\n    {\n        .doTrace(browser())\n        config_node <- NULL\n    }\n    active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n    with(mlflow_start_run(), {\n        {\n            .doTrace(browser())\n            mlflow_rename_experiment(new_name = peril, experiment_id = active_experiment_id)\n        }\n        cat(\"**********Execuation of code starts*******\", file = fileConn, \n",
        "            append = TRUE, sep = \"\\n\")\n        exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n            \" for Peril:\", experiment_id_)\n        cat(exper_id_log, file = fileConn, append = TRUE, sep = \"\\n\")\n        if (experiment_id_ == \"cloud\") {\n            config_node <- cloud_config_data\n        }\n        if (experiment_id_ == \"leakomania\") {\n            config_node <- leakomania_config_data\n        }\n        for (p in ls(config_node)) {\n            if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \n",
        "                \"senarios_variant_jurdication_ID\")) {\n                mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n            }\n            else {\n                mlflow_log_param(p, config_node[[p]])\n            }\n        }\n        mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n",
        "        text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n        {\n            .doTrace(browser())\n            cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n        }\n        cat(\"*******Execaution of code ends*******\", file = fileConn, \n            append = TRUE, sep = \"\\n\")\n        mlflow_log_artifact(file_name, run_id = active_experiment_id)\n    })\n    close(fileConn)\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: {\n    .doTrace(browser())\n    config_node <- NULL\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: .doTrace(browser())\n",
        "Browse[2]> ",
        "n",
        "Browse[3]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: config_node <- NULL\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#22: active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#23: with(mlflow_start_run(), {\n    {\n        .doTrace(browser())\n        mlflow_rename_experiment(new_name = peril, experiment_id = active_experiment_id)\n    }\n    cat(\"**********Execuation of code starts*******\", file = fileConn, \n        append = TRUE, sep = \"\\n\")\n    exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n        \" for Peril:\", experiment_id_)\n    cat(exper_id_log, file = fileConn, append = TRUE, sep = \"\\n\")\n    if (experiment_id_ == \"cloud\") {\n",
        "        config_node <- cloud_config_data\n    }\n    if (experiment_id_ == \"leakomania\") {\n        config_node <- leakomania_config_data\n    }\n    for (p in ls(config_node)) {\n        if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n            mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n        }\n        else {\n            mlflow_log_param(p, config_node[[p]])\n        }\n    }\n    mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n    mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n",
        "    mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n    mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n    text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n    {\n        .doTrace(browser())\n        cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n    }\n    cat(\"*******Execaution of code ends*******\", file = fileConn, \n        append = TRUE, sep = \"\\n\")\n    mlflow_log_artifact(file_name, run_id = active_experiment_id)\n})\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#24: {\n    .doTrace(browser())\n    mlflow_rename_experiment(new_name = peril, experiment_id = active_experiment_id)\n}\n",
        "Browse[2]> ",
        "mlflow_get_experiment(experiment_id = experiment_name_)",
        "Error: API request to endpoint 'experiments/get' failed with error code 404. Reponse body: 'RESOURCE_DOES_NOT_EXIST; Could not find experiment with ID exp_run_1'\n",
        "In addition: ",
        "Warning messages:\n",
        "1: ",
        "In .Internal(mget(x, envir, mode, if (missing(ifnotfound)) list(function(x) stop(gettextf(\"value for %s not found\",  :",
        "\n ",
        " closing unused connection 7 (cloud_output.txt)\n",
        "2: ",
        "In .Internal(mget(x, envir, mode, if (missing(ifnotfound)) list(function(x) stop(gettextf(\"value for %s not found\",  :",
        "\n ",
        " closing unused connection 6 (cloud_output.txt)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#24: .doTrace(browser())\n",
        "Browse[2]> ",
        "n",
        "Browse[3]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#24: mlflow_rename_experiment(new_name = peril, experiment_id = active_experiment_id)\n",
        "Browse[2]> ",
        "n",
        "API request to endpoint 'experiments/update' failed with error code 400. Reponse body: 'RESOURCE_ALREADY_EXISTS; Experiment 'cloud' already exists.'",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#53: close(fileConn)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#55: mlflow_ui()\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#56: mlflow_end_run(status = c(\"FINISHED\", \"FAILED\", \"KILLED\"), run_id = active_experiment_id)\n",
        "Browse[2]> ",
        "n",
        "Error: There is no active run to end.\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#13: cloud_config_data <- fromJSON(file = \"~/Documents/GitHub/Cyber_IT_Perils/config/cloud_config.json\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#16: for (peril in ls(main_config_data)) {\n    experiment_id_ <- peril\n    file_name <- paste(experiment_id_, \"_output.txt\", sep = \"\")\n    fileConn <- file(file_name)\n    if (main_config_data[peril] == TRUE) {\n        {\n            .doTrace(browser())\n            config_node <- NULL\n        }\n        active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n        with(mlflow_start_run(), {\n            {\n                .doTrace(browser())\n",
        "                mlflow_rename_experiment(new_name = peril, experiment_id = active_experiment_id)\n            }\n            cat(\"**********Execuation of code starts*******\", \n                file = fileConn, append = TRUE, sep = \"\\n\")\n            exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n                \" for Peril:\", experiment_id_)\n            cat(exper_id_log, file = fileConn, append = TRUE, \n                sep = \"\\n\")\n            if (experiment_id_ == \"cloud\") {\n                config_node <- cloud_config_data\n",
        "            }\n            if (experiment_id_ == \"leakomania\") {\n                config_node <- leakomania_config_data\n            }\n            for (p in ls(config_node)) {\n                if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \n                  \"senarios_variant_jurdication_ID\")) {\n                  mlflow_log_param(p, paste(config_node[[p]], \n                    collapse = \", \"))\n                }\n                else {\n                  mlflow_log_param(p, config_node[[p]])\n                }\n            }\n",
        "            mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n            mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n            mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n            mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n            text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n            {\n                .doTrace(browser())\n                cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n",
        "            }\n            cat(\"*******Execaution of code ends*******\", file = fileConn, \n                append = TRUE, sep = \"\\n\")\n            mlflow_log_artifact(file_name, run_id = active_experiment_id)\n        })\n        close(fileConn)\n    }\n    mlflow_ui()\n    mlflow_end_run(status = c(\"FINISHED\", \"FAILED\", \"KILLED\"), \n        run_id = active_experiment_id)\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#17: experiment_id_ <- peril\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#18: file_name <- paste(experiment_id_, \"_output.txt\", sep = \"\")\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#19: fileConn <- file(file_name)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#20: if (main_config_data[peril] == TRUE) {\n    {\n        .doTrace(browser())\n        config_node <- NULL\n    }\n    active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n    with(mlflow_start_run(), {\n        {\n            .doTrace(browser())\n            mlflow_rename_experiment(new_name = peril, experiment_id = active_experiment_id)\n        }\n        cat(\"**********Execuation of code starts*******\", file = fileConn, \n",
        "            append = TRUE, sep = \"\\n\")\n        exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n            \" for Peril:\", experiment_id_)\n        cat(exper_id_log, file = fileConn, append = TRUE, sep = \"\\n\")\n        if (experiment_id_ == \"cloud\") {\n            config_node <- cloud_config_data\n        }\n        if (experiment_id_ == \"leakomania\") {\n            config_node <- leakomania_config_data\n        }\n        for (p in ls(config_node)) {\n            if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \n",
        "                \"senarios_variant_jurdication_ID\")) {\n                mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n            }\n            else {\n                mlflow_log_param(p, config_node[[p]])\n            }\n        }\n        mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n        mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n",
        "        text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n        {\n            .doTrace(browser())\n            cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n        }\n        cat(\"*******Execaution of code ends*******\", file = fileConn, \n            append = TRUE, sep = \"\\n\")\n        mlflow_log_artifact(file_name, run_id = active_experiment_id)\n    })\n    close(fileConn)\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: {\n    .doTrace(browser())\n    config_node <- NULL\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: .doTrace(browser())\n",
        "Browse[2]> ",
        "n",
        "Browse[3]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#21: config_node <- NULL\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#22: active_experiment_id <- mlflow_set_experiment(experiment_name = experiment_name_)\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#23: with(mlflow_start_run(), {\n    {\n        .doTrace(browser())\n        mlflow_rename_experiment(new_name = peril, experiment_id = active_experiment_id)\n    }\n    cat(\"**********Execuation of code starts*******\", file = fileConn, \n        append = TRUE, sep = \"\\n\")\n    exper_id_log = paste(\"Experiment ID:\", toString(active_experiment_id), \n        \" for Peril:\", experiment_id_)\n    cat(exper_id_log, file = fileConn, append = TRUE, sep = \"\\n\")\n    if (experiment_id_ == \"cloud\") {\n",
        "        config_node <- cloud_config_data\n    }\n    if (experiment_id_ == \"leakomania\") {\n        config_node <- leakomania_config_data\n    }\n    for (p in ls(config_node)) {\n        if (p %in% c(\"CSPs\", \"senarios_variant_case_ID\", \"senarios_variant_jurdication_ID\")) {\n            mlflow_log_param(p, paste(config_node[[p]], collapse = \", \"))\n        }\n        else {\n            mlflow_log_param(p, config_node[[p]])\n        }\n    }\n    mlflow_log_metric(experiment_id_, 1, run_id = active_experiment_id)\n    mlflow_log_metric(experiment_id_, 5, run_id = active_experiment_id)\n",
        "    mlflow_log_metric(experiment_id_, 2, run_id = active_experiment_id)\n    mlflow_log_metric(experiment_id_, 3, run_id = active_experiment_id)\n    text = paste(toString(experiment_name_), \":\", toString(experiment_id_))\n    {\n        .doTrace(browser())\n        cat(text, file = fileConn, append = TRUE, sep = \"\\n\")\n    }\n    cat(\"*******Execaution of code ends*******\", file = fileConn, \n        append = TRUE, sep = \"\\n\")\n    mlflow_log_artifact(file_name, run_id = active_experiment_id)\n})\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#24: {\n    .doTrace(browser())\n    mlflow_rename_experiment(new_name = peril, experiment_id = active_experiment_id)\n}\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#24: .doTrace(browser())\n",
        "Browse[2]> ",
        "n",
        "Browse[3]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#24: mlflow_rename_experiment(new_name = peril, experiment_id = active_experiment_id)\n",
        "Browse[2]> ",
        "n",
        "API request to endpoint 'experiments/update' failed with error code 400. Reponse body: 'RESOURCE_ALREADY_EXISTS; Experiment 'cloud' already exists.'",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#53: close(fileConn)\n",
        "Browse[2]> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "Error in fBody[[i]] : subscript out of bounds\n",
        "Browse[2]> ",
        "n",
        "debug at ~/Documents/GitHub/mlflow_use_case/main.R/main_init.R#55: mlflow_ui()\n",
        "Browse[2]> ",
        "Q",
        "Browse[2]> ",
        "Q",
        "Browse[2]> ",
        "Q",
        "Browse[2]> ",
        "Q",
        "Browse[2]> ",
        "Q",
        "Browse[2]> ",
        "Q",
        "Browse[2]> ",
        "Q",
        "> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "Error in fBody[[i]] : subscript out of bounds\n",
        "> ",
        "debugSource('~/Documents/GitHub/mlflow_use_case/main.R/main_init.R', echo=TRUE)",
        "Error in fBody[[i]] : subscript out of bounds\n",
        "\nRestarting R session...\n\n"
    ],
    "type" : [
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        2
    ]
}